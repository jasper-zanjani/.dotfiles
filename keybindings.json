[ 
// Python
  { "key": "ctrl+alt+meta+p",     "command": "python.execInTerminal" },

// Moving focus between panes
  { "key": "ctrl+meta+h",         "command": "workbench.action.focusLeftGroup" },
  { "key": "ctrl+meta+j",         "command": "workbench.action.focusBelowGroup" },
  { "key": "ctrl+meta+k",         "command": "workbench.action.focusAboveGroup" },
  { "key": "ctrl+meta+l",         "command": "workbench.action.focusRightGroup" },

// Moving editors into different panes
  { "key": "ctrl+shift+meta+h",   "command": "workbench.action.moveActiveEditorGroupLeft" },
  { "key": "ctrl+shift+meta+j",   "command": "workbench.action.moveActiveEditorGroupDown" },
  { "key": "ctrl+shift+meta+k",   "command": "workbench.action.moveActiveEditorGroupUp" },
  { "key": "ctrl+shift+meta+l",   "command": "workbench.action.moveActiveEditorGroupRight" },

// Zen mode
  { "key": "ctrl+meta+z",         "command": "workbench.action.toggleZenMode" },

// Markdown
  { "key": "alt+b",               "command": "markdown.extension.editing.toggleBold", "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'" },
  { "key": "alt+i",               "command": "markdown.extension.editing.toggleItalic", "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'" },

// Status bar
  { "key": "ctrl+alt+b",          "command": "workbench.action.toggleActivityBarVisibility" },
  { "key": "ctrl+shift+t",        "command": "workbench.action.openGlobalKeybindings" },
  { "key": "ctrl+shift+t",        "command": "workbench.action.openGlobalKeybindings" },

// Integrated terminal
  { "key": "f12",                 "command": "workbench.action.togglePanel" },
  { "key": "ctrl+f11",            "command": "workbench.action.toggleMaximizedPanel" },
  { "key": "ctrl+f12",            "command": "workbench.action.togglePanelPosition" },

// Shell Launcher
  { "key": "ctrl+meta+f12",       "command": "shellLauncher.launch" },
  { "key": "ctrl+meta+f12",       "command": "shellLauncher.launch" },

// Side bar and activity bar
  { "key": "ctrl+shift+b",        "command": "workbench.action.toggleSidebarVisibility" },
  { "key": "ctrl+shift+e",        "command": "workbench.view.explorer" },
  { "key": "ctrl+shift+x",        "command": "workbench.view.extensions" },
  { "key": "ctrl+shift+f",        "command": "workbench.view.search", "when": "!searchViewletVisible" },
  { "key": "ctrl+shift+d",        "command": "workbench.view.debug" },

// Git
  { "key": "ctrl+meta+g a",       "command": "git.stageAll" },
  { "key": "ctrl+meta+g c",       "command": "git.commitStaged" },
  { "key": "ctrl+meta+g p",       "command": "git.push" },
  { "key": "ctrl+meta+g shift+p", "command": "git.pull" },
  { "key": "ctrl+meta+g s",       "command": "git.sync" },

// Etc
  { "key": "alt+delete",          "command": "editor.action.deleteLines", "when": "textInputFocus && !editorReadonly" },

// Removing default keybindings
  { "key": "ctrl+shift+b",        "command": "-workbench.action.tasks.build" },
  { "key": "shift+meta+e",        "command": "-workbench.view.explorer" },
  { "key": "ctrl+b",              "command": "-workbench.action.toggleSidebarVisibility" },
  { "key": "ctrl+meta+f",         "command": "-workbench.action.toggleFullScreen" },
  { "key": "ctrl+meta+right",     "command": "-workbench.action.moveEditorToNextGroup" },
  { "key": "ctrl+meta+left",      "command": "-workbench.action.moveEditorToPreviousGroup" },
  { "key": "shift+cmd+d",         "command": "-workbench.view.debug" },
  { "key": "shift+cmd+f",         "command": "-workbench.view.search", "when": "!searchViewletVisible" },
  { "key": "shift+cmd+x",         "command": "-workbench.view.extensions" },
  { "key": "ctrl+shift+r",        "command": "-editor.action.refactor", "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly" },
  { "key": "ctrl+h",              "command": "-editor.action.startFindReplaceAction" },
  { "key": "f11",                 "command": "-extension.node-debug.startWithStopOnEntry", "when": "!inDebugMode && debugConfigurationType == 'node'" },
  { "key": "f11",                 "command": "-workbench.action.debug.stepInto", "when": "inDebugMode" },
]